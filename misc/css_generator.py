#!/usr/bin/python3.5
# -*- coding: utf8 -*-
"""
BGA framework: © Gregory Isabelli <gisabelli@boardgamearena.com> & Emmanuel Colin <ecolin@boardgamearena.com>
Innovation implementation : © Jean Portemer <jportemer@gmail.com>

This file is design to produce hard css code to be appended into innovation.js, in order to manage sprite management using HTML classes and fonts.
It works with a Python interpreter (version >= 3.5).
The generated file is created or recreated in the same folder this script is executed, its name is :
to_be_appended_into_innovation.css
"""

# File the CSS code will be written in
dest_file = "to_be_appended_into_innovation.css"

def write_font_sizes(f):
	for s in range(1, 31):
		f.write(""".font_size_{s} <
\tfont-size: {s}px;
>\n\n""".format(s=s).replace('<', '{').replace('>', '}'))

def write_hexagon_icons(f):
	x = 3
	y = 3
	offset = 40
	
	for id in range(0,105):
		f.write(""".M.hexagon_card_icon.hexagon_icon_{id} <
\tbackground-position: -{x}px -{y}px;
>\n\n""".format(id=id, x=x, y=y).replace('<', '{').replace('>', '}'))
		
		if id >= 14 and (id - 14) % 10 == 0: # New line on sprite
			x = 3
			y += offset
		else: # Same line, next card 
			x += offset


if __name__ == "__main__":
	with open(dest_file, "w") as f:
		f.write("/* Auto-generated by css_generator_for_sprites.py (Python script) */\n\n")
		write_font_sizes(f)
		write_hexagon_icons(f)
